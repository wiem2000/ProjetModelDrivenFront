@model ProjetModelDrivenFront.ViewModels.ConfigurationViewModel
@{
    var configData = ViewBag.ConfigurationData as ProjetModelDrivenFront.ViewModels.ConfigurationViewModel;
}

<div class="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50 p-6">
    <div class="max-w-7xl mx-auto" data-aos="fade-up">
        <!-- Header Section -->
        <div class="mb-8">
            <div class="bg-white rounded-2xl shadow-xl border border-slate-200 overflow-hidden">
                <div class="bg-gradient-to-r from-[#742774] via-[#000000] to-[#FFCC00] px-8 py-6">

                     

                    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between">
                        <div class="flex items-center space-x-4">
                            <div class="p-3 bg-white/10 rounded-xl backdrop-blur-sm">
                                <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                                </svg>
                            </div>
                            <div>
                                <h1 class="text-3xl font-bold text-white">Configuration Dynamics 365</h1>
                                <p class="text-blue-100 mt-1">Gérez vos environnements et connexions</p>
                            </div>
                        </div>
                        <div class="mt-4 lg:mt-0 lg:ml-12">
                            <button onclick="openAddModal()"
                                    class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-400 to-yellow-500 text-slate-900 font-semibold rounded-xl hover:from-amber-500 hover:to-yellow-600 transform hover:scale-105 transition-all duration-200 shadow-lg">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                                </svg>
                                Nouvel Environnement
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Notifications -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-6 bg-emerald-50 border-l-4 border-emerald-400 rounded-r-xl p-4 shadow-sm">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="w-5 h-5 text-emerald-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-emerald-800 font-medium">@TempData["SuccessMessage"]</p>
                    </div>
                </div>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="mb-6 bg-red-50 border-l-4 border-red-400 rounded-r-xl p-4 shadow-sm">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="w-5 h-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="ml-3">
                        <p class="text-red-800 font-medium">@TempData["ErrorMessage"]</p>
                    </div>
                </div>
            </div>
        }

        @if (configData?.Environments?.Any() == true)
        {
            <!-- Statistics Dashboard -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-2xl p-6 shadow-lg border border-slate-200 hover:shadow-xl transition-shadow duration-300">
                    <div class="flex items-center">
                        <div class="p-3 bg-blue-100 rounded-xl">
                            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-slate-900">@configData.Environments.Count</p>
                            <p class="text-slate-600 text-sm">Environnements</p>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-2xl p-6 shadow-lg border border-slate-200 hover:shadow-xl transition-shadow duration-300">
                    <div class="flex items-center">
                        <div class="p-3 bg-emerald-100 rounded-xl">
                            <svg class="w-6 h-6 text-emerald-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-slate-900">@configData.Environments.Count(e => e.Status == "Connected")</p>
                            <p class="text-slate-600 text-sm">Connectés</p>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-2xl p-6 shadow-lg border border-slate-200 hover:shadow-xl transition-shadow duration-300">
                    <div class="flex items-center">
                        <div class="p-3 bg-amber-100 rounded-xl">
                            <svg class="w-6 h-6 text-amber-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-slate-900">@configData.Environments.Count(e => e.IsDefault)</p>
                            <p class="text-slate-600 text-sm">Par défaut</p>
                        </div>
                    </div>
                </div>

                <div class="bg-white rounded-2xl p-6 shadow-lg border border-slate-200 hover:shadow-xl transition-shadow duration-300">
                    <div class="flex items-center">
                        <div class="p-3 bg-red-100 rounded-xl">
                            <svg class="w-6 h-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                            </svg>
                        </div>
                        <div class="ml-4">
                            <p class="text-2xl font-bold text-slate-900">@configData.Environments.Count(e => e.Status == "Error")</p>
                            <p class="text-slate-600 text-sm">En erreur</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Environments Grid -->
            <div class="grid gap-6">
                @foreach (var env in configData.Environments.OrderByDescending(e => e.IsDefault))
                {
                    <div class="bg-white rounded-2xl shadow-lg border border-slate-200 overflow-hidden hover:shadow-xl transition-all duration-300 @(env.IsDefault ? "ring-2 ring-amber-400 ring-opacity-50" : "")">
                        <div class="p-6">
                            <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between">
                                <div class="flex-1">
                                    <!-- Environment Header -->
                                    <div class="flex items-center mb-4">
                                        <div class="flex items-center space-x-3">
                                            <div class="p-2 bg-slate-100 rounded-lg">
                                                <svg class="w-5 h-5 text-slate-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                                </svg>
                                            </div>
                                            <div>
                                                <h3 class="text-xl font-semibold text-slate-900">@env.Username</h3>
                                                <p class="text-slate-500 text-sm">Utilisateur Dynamics 365</p>
                                            </div>
                                        </div>
                                        @if (env.IsDefault)
                                        {
                                            <div class="ml-4">
                                                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-gradient-to-r from-amber-400 to-yellow-500 text-slate-900">
                                                    <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                    </svg>
                                                    Par défaut
                                                </span>
                                            </div>
                                        }
                                    </div>

                                    <!-- Environment Details -->
                                    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-4">
                                        <div class="space-y-3">
                                            <div>
                                                <label class="block text-sm font-medium text-slate-600 mb-1">URL de l'environnement</label>
                                                <div class="flex items-center space-x-2">
                                                    <a href="@env.Url" target="_blank"
                                                       class="text-blue-600 hover:text-blue-800 font-medium break-all hover:underline">
                                                        @env.Url
                                                    </a>
                                                    <svg class="w-4 h-4 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                                                    </svg>
                                                </div>
                                            </div>
                                            <div>
                                               
                                                <div class="text-sm text-gray-500">
                                                    <span>Applications liées: @(env.Applications?.Count ?? 0)</span>
                                                </div>
                                            
                                            </div>
                                        </div>
                                        <div class="space-y-3 lg:ml-12">
                                            <div>
                                                <label class="block text-sm font-medium text-slate-600 mb-1">Statut de connexion</label>
                                                @{
                                                    var status = env.Status?.ToLowerInvariant();
                                                }
                                                @if (status == "connected" || status == "active")
                                                {
                                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-emerald-100 text-emerald-800">
                                                        <div class="w-2 h-2 bg-emerald-400 rounded-full mr-2"></div>
                                                        Connecté
                                                    </span>
                                                }
                                                else if (status == "error" || status == "expired")
                                                {
                                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-red-100 text-red-800">
                                                        <div class="w-2 h-2 bg-red-400 rounded-full mr-2"></div>
                                                        @(status == "expired" ? "Expiré" : "Erreur")
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-slate-100 text-slate-800">
                                                        <div class="w-2 h-2 bg-slate-400 rounded-full mr-2"></div>
                                                        Inconnu
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                    
                                    </div>
                                </div>

                                <!-- Action Buttons -->
                                <div class="flex flex-col space-y-3 lg:ml-6 mt-4 lg:mt-0">
                                    @if (!env.IsDefault)
                                    {
                                        <form asp-controller="Admin" asp-action="SetDefaultEnvironment" method="post">
                                            <input type="hidden" name="environmentId" value="@env.Id" />
                                            <input type="hidden" name="accountId" value="@configData.AccountId" />
                                            <button type="submit"
                                                    class="w-full lg:w-auto inline-flex items-center justify-center px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200">
                                                <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
                                                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                                                </svg>
                                                Définir par défaut
                                            </button>
                                        </form>
                                    }

                                    <button onclick="testConnection('@env.Id')"
                                            class="w-full lg:w-auto inline-flex items-center justify-center px-4 py-2 bg-emerald-600 text-white font-medium rounded-lg hover:bg-emerald-700 transition-colors duration-200">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                        </svg>
                                        Tester la connexion
                                    </button>

                                    <button onclick="confirmDelete('@env.Id', '@env.Username')"
                                            class="w-full lg:w-auto inline-flex items-center justify-center px-4 py-2 bg-red-600 text-white font-medium rounded-lg hover:bg-red-700 transition-colors duration-200">
                                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                                        </svg>
                                        Supprimer
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <!-- Empty State -->
            <div class="bg-white rounded-2xl shadow-lg border border-slate-200 p-12 text-center">
                <div class="max-w-md mx-auto">
                    <div class="w-24 h-24 bg-slate-100 rounded-full flex items-center justify-center mx-auto mb-6">
                        <svg class="w-12 h-12 text-slate-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
                        </svg>
                    </div>
                    <h3 class="text-xl font-semibold text-slate-900 mb-2">Aucun environnement configuré</h3>
                    <p class="text-slate-600 mb-8">Commencez par ajouter votre premier environnement Dynamics 365 pour démarrer.</p>
                    <button onclick="openAddModal()"
                            class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-amber-400 to-yellow-500 text-slate-900 font-semibold rounded-xl hover:from-amber-500 hover:to-yellow-600 transform hover:scale-105 transition-all duration-200 shadow-lg">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                        </svg>
                        Ajouter votre premier environnement
                    </button>
                </div>
            </div>
        }
    </div>
</div>

<!-- Add Environment Modal -->


<div id="addEnvironmentModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm hidden z-50 flex items-center justify-center p-4" data-aos="fade-up">
    <div class="bg-white rounded-2xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <form asp-controller="Admin" asp-action="AddEnvironment" method="post">
            <!-- Modal Header -->
            <div class="bg-gradient-to-r from-[#742774] via-[#000000] to-[#FFCC00] px-8 py-6 rounded-t-2xl">
                <div class="flex items-center justify-between">
                    <div class="flex items-center space-x-3">
                        <div class="p-2 bg-white/10 rounded-lg backdrop-blur-sm">
                            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                            </svg>
                        </div>
                        <h3 class="text-xl font-bold text-white">Nouvel Environnement Dynamics</h3>
                    </div>
                    <button type="button" onclick="closeAddModal()"
                            class="text-white/70 hover:text-white transition-colors">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>

            <!-- Microsoft Authentication Section -->
            <div class="bg-white px-8 py-6 border-b border-slate-200">
                <div class="flex items-center justify-center mb-4">
                    <img src="/images/microsoft_logo.png" alt="Microsoft" class="h-8 w-auto" />
                </div>
                <div class="text-center">
                    <h4 class="text-lg font-semibold text-slate-800 mb-2">Authentification Microsoft</h4>
                    <p class="text-sm text-slate-600">Connectez-vous avec vos identifiants Microsoft Dynamics 365</p>
                </div>
            </div>

            <!-- Modal Body -->
            <div class="p-8">
                <input type="hidden" name="AccountId" value="@configData?.AccountId" />

                <div class="space-y-6">
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                        <div>
                            <label class="block text-sm font-semibold text-slate-700 mb-2">
                                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                                </svg>
                                Nom d'utilisateur
                            </label>
                            <input name="NewEnvironment.Username" type="text" required
                                   class="w-full px-4 py-3 border border-slate-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-transparent transition-all duration-200"
                                   placeholder="utilisateur@domain.com" />
                        </div>
                        <div>
                            <label class="block text-sm font-semibold text-slate-700 mb-2">
                                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                                </svg>
                                Mot de passe
                            </label>
                            <input name="NewEnvironment.Password" type="password" required
                                   class="w-full px-4 py-3 border border-slate-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-transparent transition-all duration-200"
                                   placeholder="••••••••" />
                        </div>
                    </div>

                    <div>
                        <label class="block text-sm font-semibold text-slate-700 mb-2">
                            <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
                            </svg>
                            URL de l'environnement
                        </label>
                        <input name="NewEnvironment.Url" type="url" required
                               placeholder="https://votre-org.crm.dynamics.com"
                               class="w-full px-4 py-3 border border-slate-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-amber-400 focus:border-transparent transition-all duration-200" />
                        <p class="text-sm text-slate-500 mt-2">
                            <svg class="w-4 h-4 inline mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                            </svg>
                            Exemple: https://votre-organisation.crm.dynamics.com
                        </p>
                    </div>
                </div>
            </div>

            <!-- Modal Footer -->
            <div class="bg-slate-50 px-8 py-6 rounded-b-2xl flex flex-col sm:flex-row sm:items-center sm:justify-between space-y-3 sm:space-y-0">
                <div class="flex items-center space-x-4">
                    <button type="button"
                            onclick="testConnectionBeforeAdd()"
                            id="testButton"
                            class="inline-flex items-center px-4 py-2 bg-blue-600 text-white font-medium rounded-lg hover:bg-blue-700 transition-colors duration-200">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                        </svg>
                        Tester la connexion
                    </button>
                    <span id="connectionResult" class="text-sm text-slate-600"></span>
                </div>

                <div class="flex space-x-3">
                    <button type="button" onclick="closeAddModal()"
                            class="px-6 py-2 text-slate-700 bg-white border border-slate-300 rounded-lg hover:bg-slate-50 transition-colors duration-200 font-medium">
                        Annuler
                    </button>
                    <button type="submit" id="submitButton" disabled
                            class="px-6 py-2 bg-gradient-to-r from-amber-400 to-yellow-500 text-slate-900 rounded-lg font-semibold hover:from-amber-500 hover:to-yellow-600 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed">
                        <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2h-3m-1 4l-3 3m0 0l-3-3m3 3V4"></path>
                        </svg>
                        Ajouter l'environnement
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>
<!-- Delete Confirmation Modal -->
<div id="deleteConfirmModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm hidden z-50 flex items-center justify-center p-4" data-aos="fade-up">
    <div class="bg-white rounded-2xl shadow-2xl max-w-md w-full">
        <!-- Modal Header -->
        <div class="bg-gradient-to-r from-red-600 to-red-700 px-6 py-4 rounded-t-2xl">
            <div class="flex items-center space-x-3">
                <div class="p-2 bg-white/10 rounded-lg backdrop-blur-sm">
                    <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                    </svg>
                </div>
                <h3 class="text-xl font-bold text-white">Confirmer la suppression</h3>
            </div>
        </div>

        <!-- Modal Body -->
        <div class="p-6">
            <p class="text-slate-700 mb-2">Êtes-vous sûr de vouloir supprimer l'environnement</p>
            <p class="font-semibold text-slate-900 mb-4"><strong id="deleteEnvironmentName"></strong> ?</p>
            <div class="bg-red-50 border border-red-200 rounded-lg p-3">
                <p class="text-red-800 text-sm">
                    <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z" clip-rule="evenodd"></path>
                    </svg>
                    Cette action est irréversible et supprimera définitivement cet environnement.
                </p>
            </div>
        </div>

        <!-- Modal Footer -->
        <div class="bg-slate-50 px-6 py-4 rounded-b-2xl flex justify-end space-x-3">
            <button type="button" onclick="closeDeleteModal()"
                    class="px-4 py-2 text-slate-700 bg-white border border-slate-300 rounded-lg hover:bg-slate-50 transition-colors duration-200 font-medium">
                Annuler
            </button>
            <form id="deleteForm" asp-controller="Admin" asp-action="DeleteEnvironment" method="post" class="inline">
                <input type="hidden" id="deleteEnvironmentId" name="id" />
                <button type="submit"
                        class="px-6 py-2 bg-red-600 text-white rounded-lg font-semibold hover:bg-red-700 transition-colors duration-200">
                    <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                    Supprimer définitivement
                </button>
            </form>
        </div>
    </div>
</div>

<!-- Toast Container -->
<div id="toastContainer" class="fixed top-4 right-4 z-50 space-y-2"></div>

<script>
    function openAddModal() {
        document.getElementById('addEnvironmentModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    function closeAddModal() {
        document.getElementById('addEnvironmentModal').classList.add('hidden');
        document.body.style.overflow = 'auto';
        // Reset form
        document.getElementById('connectionResult').textContent = '';
        document.getElementById('submitButton').disabled = true;
    }

    function confirmDelete(environmentId, environmentName) {
        document.getElementById('deleteEnvironmentId').value = environmentId;
        document.getElementById('deleteEnvironmentName').textContent = environmentName;
        document.getElementById('deleteConfirmModal').classList.remove('hidden');
        document.body.style.overflow = 'hidden';
    }

    function closeDeleteModal() {
        document.getElementById('deleteConfirmModal').classList.add('hidden');
        document.body.style.overflow = 'auto';
    }

    async function testConnectionBeforeAdd() {
        const username = document.querySelector('input[name="NewEnvironment.Username"]').value;
        const password = document.querySelector('input[name="NewEnvironment.Password"]').value;
        const url = document.querySelector('input[name="NewEnvironment.Url"]').value;

        console.log(username)
        console.log(password)
        console.log(url)

        if (!username || !password || !url) {
            showToast('Erreur', 'Veuillez remplir tous les champs', 'error');
           
            return;
        }

        const testButton = document.getElementById('testButton');
        const submitButton = document.getElementById('submitButton');
        const resultSpan = document.getElementById('connectionResult');

        testButton.disabled = true;
        testButton.innerHTML = `
            <svg class="w-4 h-4 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Test en cours...
        `;
        resultSpan.textContent = 'Vérification de la connexion...';
        resultSpan.className = "text-blue-600 text-sm";

        try {
            const response = await fetch('/Admin/TestMicrosoftConnection', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ username, password, url })
            });

            const data = await response.json();

            if (data.success) {
                resultSpan.innerHTML = `
                    <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
                    </svg>
                    Connexion réussie
                `;
                resultSpan.className = "text-emerald-600 text-sm";
                submitButton.disabled = false;
                submitButton.classList.remove('opacity-50', 'cursor-not-allowed');
            } else {
                resultSpan.innerHTML = `
                    <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                    </svg>
                    Connexion échouée: ${data.message}
                `;
                resultSpan.className = "text-red-600 text-sm";
                submitButton.disabled = true;
                submitButton.classList.add('opacity-50', 'cursor-not-allowed');
            }
        } catch (error) {
            resultSpan.innerHTML = `
                <svg class="w-4 h-4 inline mr-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                </svg>
                Erreur de connexion
            `;
            resultSpan.className = "text-red-600 text-sm";
            submitButton.disabled = true;
        } finally {
            testButton.disabled = false;
            testButton.innerHTML = `
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                </svg>
                Tester la connexion
            `;
        }
    }

    function testConnection(environmentId) {
        const button = event.target;
        const originalContent = button.innerHTML;

        button.innerHTML = `
            <svg class="w-4 h-4 mr-2 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
            </svg>
            Test en cours...
        `;
        button.disabled = true;

        fetch(`/Admin/TestConnection?id=${environmentId}`)
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast('Succès', data.message, 'success');
                    setTimeout(() => location.reload(), 1500);
                } else {
                    showToast('Erreur', data.message, 'error');
                }
            })
            .catch(error => {
                showToast('Erreur', 'Erreur lors du test de connexion', 'error');
            })
            .finally(() => {
                button.innerHTML = originalContent;
                button.disabled = false;
            });
    }

    function showToast(title, message, type) {
        const toastContainer = document.getElementById('toastContainer');
        const toastId = 'toast-' + Date.now();
        const bgClass = type === 'success' ? 'bg-emerald-500' : 'bg-red-500';
        const icon = type === 'success' ?
            `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
            </svg>` :
            `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
            </svg>`;

        const toastHtml = `
            <div id="${toastId}" class="${bgClass} text-white p-4 rounded-xl shadow-lg max-w-sm transform transition-all duration-300 translate-x-full backdrop-blur-sm">
                <div class="flex items-start">
                    <div class="flex-shrink-0 mr-3 mt-0.5">
                        ${icon}
                    </div>
                    <div class="flex-1">
                        <div class="font-semibold">${title}</div>
                        <div class="text-sm opacity-90 mt-1">${message}</div>
                    </div>
                    <button onclick="removeToast('${toastId}')" class="ml-4 text-white/70 hover:text-white transition-colors">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
            </div>
        `;

        toastContainer.insertAdjacentHTML('beforeend', toastHtml);

        setTimeout(() => {
            document.getElementById(toastId).classList.remove('translate-x-full');
        }, 100);

        setTimeout(() => {
            removeToast(toastId);
        }, 5000);
    }

    function removeToast(toastId) {
        const toast = document.getElementById(toastId);
        if (toast) {
            toast.classList.add('translate-x-full');
            setTimeout(() => {
                toast.remove();
            }, 300);
        }
    }

    // Close modals on outside click
    document.addEventListener('click', function(event) {
        const addModal = document.getElementById('addEnvironmentModal');
        const deleteModal = document.getElementById('deleteConfirmModal');

        if (event.target === addModal) {
            closeAddModal();
        }
        if (event.target === deleteModal) {
            closeDeleteModal();
        }
    });

    // Auto-hide notifications
    document.addEventListener('DOMContentLoaded', function() {
        const notifications = document.querySelectorAll('.bg-emerald-50, .bg-red-50');
        notifications.forEach(notification => {
            setTimeout(() => {
                notification.style.opacity = '0';
                notification.style.transform = 'translateX(100%)';
                setTimeout(() => {
                    notification.remove();
                }, 300);
            }, 5000);
        });
    });

    // Escape key to close modals
    document.addEventListener('keydown', function(event) {
        if (event.key === 'Escape') {
            closeAddModal();
            closeDeleteModal();
        }
    });
</script>

